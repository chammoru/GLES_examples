

#include "GL/glew.h"
#include "glm/glm.hpp"
#include <iostream>

//////////////////////////////////////////////////////////////////////
//// Define Mesh Model
//////////////////////////////////////////////////////////////////////
static const int g_num_vertices = 184;
static const int g_num_triangles = 364;

//// Declare VAO, VBO variables
//////////////////////////////////////////////////////////////////////
static GLuint g_vao_id;
static GLuint g_vbo_position_id;
static GLuint g_vbo_normal_id;
static GLuint g_vbo_color_id;
static GLuint g_index_buffer_id;

// Index Buffer Object
static GLuint index_buffer_id;

void InitS()
{
	// s shape
	static GLfloat m_positions[g_num_vertices * 3] =
	{ 
0.27805f, 0.23909f, 0.15f,
0.03429f, 0.19919f, 0.15f,
0.27805f, 0.19919f, 0.15f,
0.03360f, 0.13924f, 0.15f,
0.20961f, 0.017134f, 0.15f,
0.13602f, 0.074042f, 0.15f,
-0.00181f, 0.16216f, 0.15f,
0.25436f, -0.031484f, 0.15f,
0.27965f, -0.08503f, 0.15f,
-0.02653f, 0.18273f, 0.15f,
0.29482f, -0.15673f, 0.15f,
0.29987f, -0.24657f, 0.15f,
-0.04057f, 0.20095f, 0.15f,
0.29707f, -0.31217f, 0.15f,
0.28865f, -0.36516f, 0.15f,
0.27462f, -0.40555f, 0.15f,
0.25256f, -0.43779f, 0.15f,
0.22004f, -0.46637f, 0.15f,
0.17706f, -0.49127f, 0.15f,
-0.04816f, 0.22078f, 0.15f,
0.12621f, -0.51049f, 0.15f,
0.00873f, -0.52587f, 0.15f,
0.07010f, -0.52203f, 0.15f,
-0.11804f, -0.50814f, 0.15f,
-0.05808f, -0.52144f, 0.15f,
-0.21509f, -0.45694f, 0.15f,
-0.17113f, -0.48597f, 0.15f,
-0.26870f, -0.38435f, 0.15f,
-0.24761f, -0.42307f, 0.15f,
-0.28921f, -0.27906f, 0.15f,
-0.28152f, -0.33745f, 0.15f,
-0.29177f, -0.14308f, 0.15f,
-0.29177f, -0.20916f, 0.15f,
-0.04800f, -0.2659f, 0.15f,
-0.04800f, -0.14308f, 0.15f,
-0.03948f, -0.10387f, 0.15f,
-0.19777f, 0.005507f, 0.15f,
-0.15454f, -0.025873f, 0.15f,
-0.22631f, 0.02899f, 0.15f,
-0.24629f, 0.051018f, 0.15f,
0.00145f, -0.13442f, 0.15f,
-0.26385f, 0.078034f, 0.15f,
-0.27899f, 0.11004f, 0.15f,
-0.29059f, 0.14772f, 0.15f,
0.02618f, -0.15679f, 0.15f,
-0.29755f, 0.19178f, 0.15f,
-0.29987f, 0.24221f, 0.15f,
-0.29658f, 0.31258f, 0.15f,
-0.28671f, 0.36911f, 0.15f,
-0.27026f, 0.41178f, 0.15f,
0.03969f, -0.18194f, 0.15f,
-0.24647f, 0.44493f, 0.15f,
-0.17456f, 0.49563f, 0.15f,
-0.21457f, 0.47288f, 0.15f,
-0.07426f, 0.52251f, 0.15f,
-0.12746f, 0.51243f, 0.15f,
0.04984f, 0.5222f, 0.15f,
-0.01496f, 0.52587f, 0.15f,
0.15929f, 0.49283f, 0.15f,
0.10792f, 0.51118f, 0.15f,
0.23369f, 0.44115f, 0.15f,
0.20189f, 0.46889f, 0.15f,
0.26766f, 0.36835f, 0.15f,
0.25467f, 0.4096f, 0.15f,
0.27546f, 0.31151f, 0.15f,
0.03429f, 0.274f, 0.15f,
-0.04686f, -0.29922f, 0.15f,
-0.04343f, -0.32353f, 0.15f,
-0.03772f, -0.33884f, 0.15f,
-0.02909f, -0.34784f, 0.15f,
-0.01694f, -0.35325f, 0.15f,
-0.00125f, -0.35505f, 0.15f,
0.01472f, -0.35276f, 0.15f,
0.02771f, -0.3459f, 0.15f,
0.03772f, -0.33447f, 0.15f,
0.04482f, -0.31854f, 0.15f,
0.03325f, 0.30469f, 0.15f,
0.04908f, -0.29818f, 0.15f,
0.05050f, -0.27338f, 0.15f,
0.04780f, -0.2208f, 0.15f,
-0.05272f, 0.24615f, 0.15f,
-0.05424f, 0.27706f, 0.15f,
-0.05289f, 0.30105f, 0.15f,
-0.04884f, 0.32059f, 0.15f,
0.03013f, 0.32692f, 0.15f,
0.02494f, 0.34071f, 0.15f,
-0.04208f, 0.33571f, 0.15f,
-0.03270f, 0.34645f, 0.15f,
-0.02075f, 0.3529f, 0.15f,
-0.00623f, 0.35505f, 0.15f,
0.01732f, 0.34867f, 0.15f,
0.00693f, 0.35345f, 0.15f,
0.27805f, 0.19919f, -0.15f,
0.03429f, 0.19919f, -0.15f,
0.27805f, 0.23909f, -0.15f,
0.13602f, 0.074042f, -0.15f,
0.20961f, 0.017134f, -0.15f,
0.03360f, 0.13924f, -0.15f,
-0.00181f, 0.16216f, -0.15f,
0.25436f, -0.031484f, -0.15f,
0.27965f, -0.08503f, -0.15f,
-0.02653f, 0.18273f, -0.15f,
0.29482f, -0.15673f, -0.15f,
0.29987f, -0.24657f, -0.15f,
-0.04057f, 0.20095f, -0.15f,
0.29707f, -0.31217f, -0.15f,
0.28865f, -0.36516f, -0.15f,
0.27462f, -0.40555f, -0.15f,
0.25256f, -0.43779f, -0.15f,
0.22004f, -0.46637f, -0.15f,
0.17706f, -0.49127f, -0.15f,
-0.04816f, 0.22078f, -0.15f,
0.12621f, -0.51049f, -0.15f,
0.07010f, -0.52203f, -0.15f,
0.00873f, -0.52587f, -0.15f,
-0.05808f, -0.52144f, -0.15f,
-0.11804f, -0.50814f, -0.15f,
-0.17113f, -0.48597f, -0.15f,
-0.21509f, -0.45694f, -0.15f,
-0.24761f, -0.42307f, -0.15f,
-0.26870f, -0.38435f, -0.15f,
-0.28152f, -0.33745f, -0.15f,
-0.28921f, -0.27906f, -0.15f,
-0.29177f, -0.20916f, -0.15f,
-0.29177f, -0.14308f, -0.15f,
-0.04800f, -0.14308f, -0.15f,
-0.04800f, -0.2659f, -0.15f,
-0.15454f, -0.025873f, -0.15f,
-0.19777f, 0.005507f, -0.15f,
-0.03948f, -0.10387f, -0.15f,
-0.22631f, 0.02899f, -0.15f,
-0.24629f, 0.051018f, -0.15f,
0.00145f, -0.13442f, -0.15f,
-0.26385f, 0.078034f, -0.15f,
-0.27899f, 0.11004f, -0.15f,
-0.29059f, 0.14772f, -0.15f,
0.02618f, -0.15679f, -0.15f,
-0.29755f, 0.19178f, -0.15f,
-0.29987f, 0.24221f, -0.15f,
-0.29658f, 0.31258f, -0.15f,
-0.28671f, 0.36911f, -0.15f,
-0.27026f, 0.41178f, -0.15f,
0.03969f, -0.18194f, -0.15f,
-0.24647f, 0.44493f, -0.15f,
-0.21457f, 0.47288f, -0.15f,
-0.17456f, 0.49563f, -0.15f,
-0.12746f, 0.51243f, -0.15f,
-0.07426f, 0.52251f, -0.15f,
-0.01496f, 0.52587f, -0.15f,
0.04984f, 0.5222f, -0.15f,
0.10792f, 0.51118f, -0.15f,
0.15929f, 0.49283f, -0.15f,
0.20189f, 0.46889f, -0.15f,
0.23369f, 0.44115f, -0.15f,
0.25467f, 0.4096f, -0.15f,
0.26766f, 0.36835f, -0.15f,
0.27546f, 0.31151f, -0.15f,
0.03429f, 0.274f, -0.15f,
-0.04686f, -0.29922f, -0.15f,
-0.04343f, -0.32353f, -0.15f,
-0.03772f, -0.33884f, -0.15f,
-0.02909f, -0.34784f, -0.15f,
-0.01694f, -0.35325f, -0.15f,
-0.00125f, -0.35505f, -0.15f,
0.01472f, -0.35276f, -0.15f,
0.02771f, -0.3459f, -0.15f,
0.03772f, -0.33447f, -0.15f,
0.04482f, -0.31854f, -0.15f,
0.03325f, 0.30469f, -0.15f,
0.04908f, -0.29818f, -0.15f,
0.05050f, -0.27338f, -0.15f,
0.04780f, -0.2208f, -0.15f,
-0.05272f, 0.24615f, -0.15f,
-0.05424f, 0.27706f, -0.15f,
-0.05289f, 0.30105f, -0.15f,
-0.04884f, 0.32059f, -0.15f,
0.03013f, 0.32692f, -0.15f,
0.02494f, 0.34071f, -0.15f,
-0.04208f, 0.33571f, -0.15f,
-0.03270f, 0.34645f, -0.15f,
-0.02075f, 0.3529f, -0.15f,
-0.00623f, 0.35505f, -0.15f,
0.01732f, 0.34867f, -0.15f,
0.00693f, 0.35345f, -0.15f
};

	static GLuint m_indices[g_num_triangles * 3] =
	{
0, 1, 2,
3, 4, 5,
6, 4, 3,
6, 7, 4,
6, 8, 7,
9, 8, 6,
9, 10, 8,
9, 11, 10,
12, 11, 9,
12, 13, 11,
12, 14, 13,
12, 15, 14,
12, 16, 15,
12, 17, 16,
12, 18, 17,
19, 18, 12,
19, 20, 18,
20, 21, 22,
21, 23, 24,
23, 25, 26,
25, 27, 28,
27, 29, 30,
29, 31, 32,
31, 33, 34,
35, 36, 37,
35, 38, 36,
35, 39, 38,
40, 39, 35,
40, 41, 39,
40, 42, 41,
40, 43, 42,
44, 43, 40,
44, 45, 43,
44, 46, 45,
44, 47, 46,
44, 48, 47,
44, 49, 48,
50, 49, 44,
50, 51, 49,
51, 52, 53,
52, 54, 55,
54, 56, 57,
56, 58, 59,
58, 60, 61,
60, 62, 63,
62, 0, 64,
0, 65, 1,
20, 23, 21,
20, 25, 23,
20, 27, 25,
20, 29, 27,
20, 31, 29,
31, 66, 33,
31, 67, 66,
31, 68, 67,
20, 68, 31,
20, 69, 68,
20, 70, 69,
20, 71, 70,
20, 72, 71,
20, 73, 72,
20, 74, 73,
20, 75, 74,
50, 52, 51,
52, 56, 54,
52, 58, 56,
52, 60, 58,
52, 62, 60,
52, 0, 62,
0, 76, 65,
20, 77, 75,
20, 78, 77,
20, 79, 78,
20, 50, 79,
19, 50, 20,
19, 52, 50,
80, 52, 19,
81, 52, 80,
82, 52, 81,
83, 52, 82,
0, 84, 76,
0, 85, 84,
86, 52, 83,
87, 52, 86,
88, 52, 87,
89, 52, 88,
0, 90, 85,
0, 91, 90,
91, 52, 89,
91, 0, 52,
92, 93, 94,
95, 96, 97,
97, 96, 98,
96, 99, 98,
99, 100, 98,
98, 100, 101,
100, 102, 101,
102, 103, 101,
101, 103, 104,
103, 105, 104,
105, 106, 104,
106, 107, 104,
107, 108, 104,
108, 109, 104,
109, 110, 104,
104, 110, 111,
110, 112, 111,
113, 114, 112,
115, 116, 114,
117, 118, 116,
119, 120, 118,
121, 122, 120,
123, 124, 122,
125, 126, 124,
127, 128, 129,
128, 130, 129,
130, 131, 129,
129, 131, 132,
131, 133, 132,
133, 134, 132,
134, 135, 132,
132, 135, 136,
135, 137, 136,
137, 138, 136,
138, 139, 136,
139, 140, 136,
140, 141, 136,
136, 141, 142,
141, 143, 142,
144, 145, 143,
146, 147, 145,
148, 149, 147,
150, 151, 149,
152, 153, 151,
154, 155, 153,
156, 94, 155,
93, 157, 94,
114, 116, 112,
116, 118, 112,
118, 120, 112,
120, 122, 112,
122, 124, 112,
126, 158, 124,
158, 159, 124,
159, 160, 124,
124, 160, 112,
160, 161, 112,
161, 162, 112,
162, 163, 112,
163, 164, 112,
164, 165, 112,
165, 166, 112,
166, 167, 112,
143, 145, 142,
147, 149, 145,
149, 151, 145,
151, 153, 145,
153, 155, 145,
155, 94, 145,
157, 168, 94,
167, 169, 112,
169, 170, 112,
170, 171, 112,
171, 142, 112,
112, 142, 111,
142, 145, 111,
111, 145, 172,
172, 145, 173,
173, 145, 174,
174, 145, 175,
168, 176, 94,
176, 177, 94,
175, 145, 178,
178, 145, 179,
179, 145, 180,
180, 145, 181,
177, 182, 94,
182, 183, 94,
181, 145, 183,
145, 94, 183,
2, 93, 92,
2, 1, 93,
1, 157, 93,
1, 65, 157,
65, 168, 157,
65, 76, 168,
76, 176, 168,
76, 84, 176,
84, 177, 176,
84, 85, 177,
85, 182, 177,
85, 90, 182,
90, 183, 182,
90, 91, 183,
91, 181, 183,
91, 89, 181,
89, 180, 181,
89, 88, 180,
88, 179, 180,
88, 87, 179,
87, 178, 179,
87, 86, 178,
86, 175, 178,
86, 83, 175,
83, 174, 175,
83, 82, 174,
82, 173, 174,
82, 81, 173,
81, 172, 173,
81, 80, 172,
80, 111, 172,
80, 19, 111,
19, 104, 111,
19, 12, 104,
12, 101, 104,
12, 9, 101,
9, 98, 101,
9, 6, 98,
6, 97, 98,
6, 3, 97,
3, 95, 97,
3, 5, 95,
5, 96, 95,
5, 4, 96,
4, 99, 96,
4, 7, 99,
7, 100, 99,
7, 8, 100,
8, 102, 100,
8, 10, 102,
10, 103, 102,
10, 11, 103,
11, 105, 103,
11, 13, 105,
13, 106, 105,
13, 14, 106,
14, 107, 106,
14, 15, 107,
15, 108, 107,
15, 16, 108,
16, 109, 108,
16, 17, 109,
17, 110, 109,
17, 18, 110,
18, 112, 110,
18, 20, 112,
20, 113, 112,
20, 22, 113,
22, 114, 113,
22, 21, 114,
21, 115, 114,
21, 24, 115,
24, 116, 115,
24, 23, 116,
23, 117, 116,
23, 26, 117,
26, 118, 117,
26, 25, 118,
25, 119, 118,
25, 28, 119,
28, 120, 119,
28, 27, 120,
27, 121, 120,
27, 30, 121,
30, 122, 121,
30, 29, 122,
29, 123, 122,
29, 32, 123,
32, 124, 123,
32, 31, 124,
31, 125, 124,
31, 34, 125,
34, 126, 125,
34, 33, 126,
33, 158, 126,
33, 66, 158,
66, 159, 158,
66, 67, 159,
67, 160, 159,
67, 68, 160,
68, 161, 160,
68, 69, 161,
69, 162, 161,
69, 70, 162,
70, 163, 162,
70, 71, 163,
71, 164, 163,
71, 72, 164,
72, 165, 164,
72, 73, 165,
73, 166, 165,
73, 74, 166,
74, 167, 166,
74, 75, 167,
75, 169, 167,
75, 77, 169,
77, 170, 169,
77, 78, 170,
78, 171, 170,
78, 79, 171,
79, 142, 171,
79, 50, 142,
50, 136, 142,
50, 44, 136,
44, 132, 136,
44, 40, 132,
40, 129, 132,
40, 35, 129,
35, 127, 129,
35, 37, 127,
37, 128, 127,
37, 36, 128,
36, 130, 128,
36, 38, 130,
38, 131, 130,
38, 39, 131,
39, 133, 131,
39, 41, 133,
41, 134, 133,
41, 42, 134,
42, 135, 134,
42, 43, 135,
43, 137, 135,
43, 45, 137,
45, 138, 137,
45, 46, 138,
46, 139, 138,
46, 47, 139,
47, 140, 139,
47, 48, 140,
48, 141, 140,
48, 49, 141,
49, 143, 141,
49, 51, 143,
51, 144, 143,
51, 53, 144,
53, 145, 144,
53, 52, 145,
52, 146, 145,
52, 55, 146,
55, 147, 146,
55, 54, 147,
54, 148, 147,
54, 57, 148,
57, 149, 148,
57, 56, 149,
56, 150, 149,
56, 59, 150,
59, 151, 150,
59, 58, 151,
58, 152, 151,
58, 61, 152,
61, 153, 152,
61, 60, 153,
60, 154, 153,
60, 63, 154,
63, 155, 154,
63, 62, 155,
62, 156, 155,
62, 64, 156,
64, 94, 156,
64, 0, 94,
0, 92, 94,
0, 2, 92
	};

	//// 5.1. VAO 객체 생성 및 바인딩
	glGenVertexArrays(1, &g_vao_id);
	glBindVertexArray(g_vao_id);


	//// 5.2. vertex positions 저장을 위한 VBO 생성 및 바인딩.
	glGenBuffers(1, &g_vbo_position_id);
	glBindBuffer(GL_ARRAY_BUFFER, g_vbo_position_id);

	//// 5.3. vertex positions 데이터 입력.
	glBufferData(GL_ARRAY_BUFFER, sizeof(GLfloat) * 3 * g_num_vertices, m_positions, GL_STATIC_DRAW);

	//// 5.4. 현재 바인딩되어있는 VBO를 shader program과 연결
	glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 0, 0);
	glEnableVertexAttribArray(0);

	//// 5.6. Index Buffer 객체 생성 및 데이터 입력
	glGenBuffers(1, &g_index_buffer_id);
	glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, g_index_buffer_id);
	glBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(GLuint) * 3 * g_num_triangles, m_indices, GL_STATIC_DRAW);
}


void DrawS()
{
	glBindVertexArray(g_vao_id);
	glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, g_index_buffer_id);
	glDrawElements(GL_TRIANGLES, g_num_triangles * 3, GL_UNSIGNED_INT, 0);
}


void DeleteS()
{
	//// 5.12. VAO, VBO 메모리 해제. 
	glDeleteBuffers(1, &g_vbo_position_id);
	glDeleteVertexArrays(1, &g_vao_id);
}